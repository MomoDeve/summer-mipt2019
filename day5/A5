#include <iostream>
#include <vector>
#include <sstream>
#include <string>
#include <cmath>
#include <set>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <string>
#include <algorithm>
#include <bitset>

using namespace std;
typedef long long ll;

vector<string> A;

#define TRUE 'Y'
#define FALSE 'N'

vector<bool> dp;

bool bit(int i, int mask)
{
	return mask & (1 << i);
}

int count_bits(int mask)
{
	int res = 0;
	for (int i = 0; i < 8 * sizeof(mask); i++)
	{
		res += (mask & 1);
		mask >>= 1;
	}
	return res;
}

int main()
{
	int n;
	cin >> n;
	A.resize(n);
	for (int i = 0; i < n; i++)
	{
		cin >> A[i];
	}
	dp.resize(1 << n);
	dp[0] = true;
	int res = 0;
	for(int mask = 0; mask < (1 << n); mask++)
	{
		if (dp[mask])
		{
			for (int j = 0; j < n; j++)
			{
				if (!bit(j, mask))
				{
					for (int k = j + 1; k < n; k++)
					{
						if (!bit(k, mask) && A[j][k] == TRUE)
						{
							int newMask = mask | (1 << j) | (1 << k);
							dp[newMask] = true;
							int bits = count_bits(newMask);
							if (bits > res) res = bits;
						}
					}
				}
			}
		}
	}
	cout << res << endl;
	system("pause");
}
